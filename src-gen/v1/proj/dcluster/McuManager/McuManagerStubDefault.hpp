/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202001100728.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_PROJ_DCLUSTER_MCUMANAGER_Mcu_Manager_STUB_DEFAULT_HPP_
#define V1_PROJ_DCLUSTER_MCUMANAGER_Mcu_Manager_STUB_DEFAULT_HPP_


#include <CommonAPI/Export.hpp>

#include <v1/proj/dcluster/McuManager/McuManagerStub.hpp>
#include <sstream>

# if defined(_MSC_VER)
#  if _MSC_VER >= 1300
/*
 * Diamond inheritance is used for the CommonAPI::Proxy base class.
 * The Microsoft compiler put warning (C4250) using a desired c++ feature: "Delegating to a sister class"
 * A powerful technique that arises from using virtual inheritance is to delegate a method from a class in another class
 * by using a common abstract base class. This is also called cross delegation.
 */
#    pragma warning( disable : 4250 )
#  endif
# endif

namespace v1 {
namespace proj {
namespace dcluster {
namespace McuManager {

/**
 * Provides a default implementation for McuManagerStubRemoteEvent and
 * McuManagerStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class COMMONAPI_EXPORT_CLASS_EXPLICIT McuManagerStubDefault
    : public virtual McuManagerStub {
public:
    COMMONAPI_EXPORT McuManagerStubDefault();

    COMMONAPI_EXPORT McuManagerStubRemoteEvent* initStubAdapter(const std::shared_ptr< McuManagerStubAdapter> &_adapter);

    COMMONAPI_EXPORT const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    COMMONAPI_EXPORT virtual const bool& getMainContentsDisplayControlAttribute();
    COMMONAPI_EXPORT virtual const bool& getMainContentsDisplayControlAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setMainContentsDisplayControlAttribute(bool _value);
    COMMONAPI_EXPORT virtual void setMainContentsDisplayControlAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState& getDrivingStateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState& getDrivingStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDrivingStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState _value);
    COMMONAPI_EXPORT virtual void setDrivingStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo& getDriveModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo& getDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo _value);
    COMMONAPI_EXPORT virtual void setDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo& getVariantAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo& getVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo _value);
    COMMONAPI_EXPORT virtual void setVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo& getEOLAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo& getEOLAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEOLAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo _value);
    COMMONAPI_EXPORT virtual void setEOLAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo& getSWVariantAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo& getSWVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setSWVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo _value);
    COMMONAPI_EXPORT virtual void setSWVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState& getIGN1StateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState& getIGN1StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setIGN1StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual void setIGN1StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState& getIGN3StateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState& getIGN3StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setIGN3StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual void setIGN3StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit& getSpeedoUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit& getSpeedoUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setSpeedoUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit _value);
    COMMONAPI_EXPORT virtual void setSpeedoUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo& getTripDriveModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo& getTripDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo _value);
    COMMONAPI_EXPORT virtual void setTripDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo& getTripDTEAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo& getTripDTEAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripDTEAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo _value);
    COMMONAPI_EXPORT virtual void setTripDTEAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo& getTripFuelEconomyAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo& getTripFuelEconomyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripFuelEconomyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo _value);
    COMMONAPI_EXPORT virtual void setTripFuelEconomyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo& getTripAccumulatedAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo& getTripAccumulatedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripAccumulatedAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo _value);
    COMMONAPI_EXPORT virtual void setTripAccumulatedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo& getTripDriveInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo& getTripDriveInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripDriveInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo _value);
    COMMONAPI_EXPORT virtual void setTripDriveInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter& getTripDigitalSpeedMeterAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter& getTripDigitalSpeedMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripDigitalSpeedMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter _value);
    COMMONAPI_EXPORT virtual void setTripDigitalSpeedMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow& getTripPowerFlowDiagramAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow& getTripPowerFlowDiagramAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripPowerFlowDiagramAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow _value);
    COMMONAPI_EXPORT virtual void setTripPowerFlowDiagramAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow _value);
    COMMONAPI_EXPORT virtual const uint8_t& getTripUREALevelAttribute();
    COMMONAPI_EXPORT virtual const uint8_t& getTripUREALevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripUREALevelAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual void setTripUREALevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel& getTripTransmissionTempAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel& getTripTransmissionTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripTransmissionTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel _value);
    COMMONAPI_EXPORT virtual void setTripTransmissionTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp& getTripEngineCoolantTempAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp& getTripEngineCoolantTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTripEngineCoolantTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp _value);
    COMMONAPI_EXPORT virtual void setTripEngineCoolantTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo& getEnergyFlowAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo& getEnergyFlowAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEnergyFlowAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo _value);
    COMMONAPI_EXPORT virtual void setEnergyFlowAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo& getMyDrivingModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo& getMyDrivingModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setMyDrivingModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo _value);
    COMMONAPI_EXPORT virtual void setMyDrivingModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType& getTBTDisplayTypeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType& getTBTDisplayTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDisplayTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType _value);
    COMMONAPI_EXPORT virtual void setTBTDisplayTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType _value);
    COMMONAPI_EXPORT virtual const bool& getTBTDisplayTollgateAttribute();
    COMMONAPI_EXPORT virtual const bool& getTBTDisplayTollgateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDisplayTollgateAttribute(bool _value);
    COMMONAPI_EXPORT virtual void setTBTDisplayTollgateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
    COMMONAPI_EXPORT virtual const uint8_t& getTBTPreliminaryInfoAttribute();
    COMMONAPI_EXPORT virtual const uint8_t& getTBTPreliminaryInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTPreliminaryInfoAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual void setTBTPreliminaryInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState& getTBTDestInfoPageStateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState& getTBTDestInfoPageStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDestInfoPageStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState _value);
    COMMONAPI_EXPORT virtual void setTBTDestInfoPageStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType& getTBTPointTypeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType& getTBTPointTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTPointTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType _value);
    COMMONAPI_EXPORT virtual void setTBTPointTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType _value);
    COMMONAPI_EXPORT virtual const uint8_t& getTBTDirectionAttribute();
    COMMONAPI_EXPORT virtual const uint8_t& getTBTDirectionAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDirectionAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual void setTBTDirectionAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
    COMMONAPI_EXPORT virtual const uint16_t& getTBTRoadDisplayAttribute();
    COMMONAPI_EXPORT virtual const uint16_t& getTBTRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTRoadDisplayAttribute(uint16_t _value);
    COMMONAPI_EXPORT virtual void setTBTRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
    COMMONAPI_EXPORT virtual const uint8_t& getTBTSideRoadDisplayAttribute();
    COMMONAPI_EXPORT virtual const uint8_t& getTBTSideRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTSideRoadDisplayAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual void setTBTSideRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo& getTBTDistanceToDestinationAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo& getTBTDistanceToDestinationAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDistanceToDestinationAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo _value);
    COMMONAPI_EXPORT virtual void setTBTDistanceToDestinationAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo& getTBTDistanceUntilTurnAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo& getTBTDistanceUntilTurnAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDistanceUntilTurnAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo _value);
    COMMONAPI_EXPORT virtual void setTBTDistanceUntilTurnAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime& getTBTExpectedDestTimeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime& getTBTExpectedDestTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTExpectedDestTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime _value);
    COMMONAPI_EXPORT virtual void setTBTExpectedDestTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime& getTBTExpectedRemainTimeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime& getTBTExpectedRemainTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTExpectedRemainTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime _value);
    COMMONAPI_EXPORT virtual void setTBTExpectedRemainTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTGuideTPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTGuideTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTGuideTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTGuideTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTDestTPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTDestTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTDestTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTDestTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint1TPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint1TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTViaPoint1TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTViaPoint1TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint2TPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint2TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTViaPoint2TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTViaPoint2TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint3TPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint3TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTViaPoint3TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTViaPoint3TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint4TPInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getTBTViaPoint4TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBTViaPoint4TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setTBTViaPoint4TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC& getDriveAssistCruiseControlTTCAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC& getDriveAssistCruiseControlTTCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistCruiseControlTTCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC _value);
    COMMONAPI_EXPORT virtual void setDriveAssistCruiseControlTTCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal& getDriveAssistCruiseControlRealAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal& getDriveAssistCruiseControlRealAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistCruiseControlRealAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal _value);
    COMMONAPI_EXPORT virtual void setDriveAssistCruiseControlRealAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo& getDriveAssistLaneAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo& getDriveAssistLaneAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistLaneAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo _value);
    COMMONAPI_EXPORT virtual void setDriveAssistLaneAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo& getDriveAssistDAWAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo& getDriveAssistDAWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistDAWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo _value);
    COMMONAPI_EXPORT virtual void setDriveAssistDAWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo& getDriveAssistISLWAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo& getDriveAssistISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo _value);
    COMMONAPI_EXPORT virtual void setDriveAssistISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo& getDriveAssistAWDAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo& getDriveAssistAWDAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistAWDAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo _value);
    COMMONAPI_EXPORT virtual void setDriveAssistAWDAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo& getDriveAssistTPMSAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo& getDriveAssistTPMSAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDriveAssistTPMSAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo _value);
    COMMONAPI_EXPORT virtual void setDriveAssistTPMSAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo& getAdasInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo& getAdasInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAdasInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo _value);
    COMMONAPI_EXPORT virtual void setAdasInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo& getContentsGearAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo& getContentsGearAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsGearAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo _value);
    COMMONAPI_EXPORT virtual void setContentsGearAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo& getContentsCCAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo& getContentsCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo _value);
    COMMONAPI_EXPORT virtual void setContentsCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo& getContentsSCCAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo& getContentsSCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsSCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo _value);
    COMMONAPI_EXPORT virtual void setContentsSCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting& getContentsCoastingAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting& getContentsCoastingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsCoastingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting _value);
    COMMONAPI_EXPORT virtual void setContentsCoastingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo& getContentsDISAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo& getContentsDISAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsDISAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo _value);
    COMMONAPI_EXPORT virtual void setContentsDISAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE& getContentsDTEInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE& getContentsDTEInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsDTEInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE _value);
    COMMONAPI_EXPORT virtual void setContentsDTEInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo& getContentsISLWAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo& getContentsISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo _value);
    COMMONAPI_EXPORT virtual void setContentsISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT& getContentsOATAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT& getContentsOATAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsOATAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT _value);
    COMMONAPI_EXPORT virtual void setContentsOATAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO& getContentsODOMeterAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO& getContentsODOMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsODOMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO _value);
    COMMONAPI_EXPORT virtual void setContentsODOMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState& getEcoPowerDisplayInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState& getEcoPowerDisplayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEcoPowerDisplayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState _value);
    COMMONAPI_EXPORT virtual void setEcoPowerDisplayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo& getContentsRSBRAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo& getContentsRSBRAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsRSBRAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo _value);
    COMMONAPI_EXPORT virtual void setContentsRSBRAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo& getContentsSpeedLimitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo& getContentsSpeedLimitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setContentsSpeedLimitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo _value);
    COMMONAPI_EXPORT virtual void setContentsSpeedLimitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd& getMasterWarnCmdAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd& getMasterWarnCmdAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setMasterWarnCmdAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd _value);
    COMMONAPI_EXPORT virtual void setMasterWarnCmdAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAMFMInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAMFMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpAMFMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpAMFMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpXMInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpXMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpXMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpXMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpDABInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpDABInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpDABInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpDABInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpDMBInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpDMBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpDMBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpDMBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpJukeBoxInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpJukeBoxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpJukeBoxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpJukeBoxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpIpodInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpIpodInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpIpodInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpIpodInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpUSBInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpUSBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpUSBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpUSBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpBlueToothInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpBlueToothInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpBlueToothInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpBlueToothInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAppleCarPlayInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAppleCarPlayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpAppleCarPlayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpAppleCarPlayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAndroidAutoInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpAndroidAutoInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpAndroidAutoInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpAndroidAutoInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpIboxInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpIboxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpIboxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpIboxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpCDInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpCDInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpCDInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpCDInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpBaiduMInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData& getAvTpBaiduMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setAvTpBaiduMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual void setAvTpBaiduMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo& getEventContentsFullAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo& getEventContentsFullAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEventContentsFullAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual void setEventContentsFullAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo& getEventContentsMiniAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo& getEventContentsMiniAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEventContentsMiniAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual void setEventContentsMiniAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual const bool& getEventAccessoryAttribute();
    COMMONAPI_EXPORT virtual const bool& getEventAccessoryAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setEventAccessoryAttribute(bool _value);
    COMMONAPI_EXPORT virtual void setEventAccessoryAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
    COMMONAPI_EXPORT virtual const bool& getPowerTailGateWarnStateAttribute();
    COMMONAPI_EXPORT virtual const bool& getPowerTailGateWarnStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setPowerTailGateWarnStateAttribute(bool _value);
    COMMONAPI_EXPORT virtual void setPowerTailGateWarnStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE& getDisplayLanguageAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE& getDisplayLanguageAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setDisplayLanguageAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE _value);
    COMMONAPI_EXPORT virtual void setDisplayLanguageAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_SccReactionAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_SccReactionAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_SccReactionAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_LaneFollowingAssistAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_LaneFollowingAssistAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_LaneFollowingAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayDrivingAssistAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayDrivingAssistAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_HighwayDrivingAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_SpeedLimitWarningAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DrivingAssist_SpeedLimitWarningAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DrivingAssist_SpeedLimitWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DriverAttentionWarningAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_DriverAttentionWarningAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_DriverAttentionWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_WarningTimingAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_WarningTimingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_WarningTimingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_WarningVolumeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_WarningVolumeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_WarningVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_LaneSafetyAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_LaneSafetyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_LaneSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_LaneSafety_ModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_LaneSafety_ModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_LaneSafety_ModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_ForwardSafetyAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_ForwardSafetyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_ForwardSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_SpotViewAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_SpotViewAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_BlindSpotSafety_SpotViewAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_SafetyExitAssistAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_SafetyExitAssistAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_BlindSpotSafety_SafetyExitAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_WarningOnlyAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_WarningOnlyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_BlindSpotSafety_WarningOnlyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoLockAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoLockAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_AutoLockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoUnlock_KeyOrPowerAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoUnlock_KeyOrPowerAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_AutoUnlock_KeyOrPowerAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoUnlockAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_AutoUnlockAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_AutoUnlockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_HornFeedbackAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_HornFeedbackAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_HornFeedbackAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_PowerTailgateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_PowerTailgateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_PowerTailgateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_PowerTailgateSpeedAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_PowerTailgateSpeedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_PowerTailgateSpeedAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_SmartTailgateAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmDoor_SmartTailgateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmDoor_SmartTailgateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_OneTouchTurnSignalAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_OneTouchTurnSignalAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmLights_OneTouchTurnSignalAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_AmbientLightAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_AmbientLightAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmLights_AmbientLightAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_HeadlightDelayAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_HeadlightDelayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmLights_HeadlightDelayAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_HighBeamAssistAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLights_HighBeamAssistAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmLights_HighBeamAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_ClusterVoiceGuidanceVolumeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_ClusterVoiceGuidanceVolumeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmSound_ClusterVoiceGuidanceVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_ParkAssistVolumeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_ParkAssistVolumeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmSound_ParkAssistVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_WelcomeSoundAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmSound_WelcomeSoundAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmSound_WelcomeSoundAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_SeatEasyAccessAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_SeatEasyAccessAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_SeatEasyAccessAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_TitleAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_TitleAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_WelcomeMirrorLight_TitleAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_OnDoorUnlockAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_OnDoorUnlockAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_WelcomeMirrorLight_OnDoorUnlockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_OnDriverApproachAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WelcomeMirrorLight_OnDriverApproachAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_WelcomeMirrorLight_OnDriverApproachAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_MirrorAutoFoldingAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_MirrorAutoFoldingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_MirrorAutoFoldingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WirelessChargingSystemAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WirelessChargingSystemAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_WirelessChargingSystemAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_TrafficInformationAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_TrafficInformationAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_TrafficInformationAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WipreLightsDisplayAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_WipreLightsDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_WipreLightsDisplayAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_AutoRearWiperInRAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_AutoRearWiperInRAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_AutoRearWiperInRAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_GearPositionPopupAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_GearPositionPopupAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_GearPositionPopupAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_IcyRoadWarningAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmConvenience_IcyRoadWarningAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmConvenience_IcyRoadWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_ModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_ModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmServiceInterval_ModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_EnableServiceIntervalAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_EnableServiceIntervalAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmServiceInterval_EnableServiceIntervalAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_ResetAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmServiceInterval_ResetAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmServiceInterval_ResetAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_FuelEconomyResetAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_FuelEconomyResetAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_FuelEconomyResetAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_FuelEconomyUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_FuelEconomyUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_FuelEconomyUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TemperatureUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TemperatureUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_TemperatureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TirePressureUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TirePressureUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_TirePressureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_SpeedUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_SpeedUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_SpeedUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TorqueUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TorqueUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_TorqueUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TurboBoostPressureUnitAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmOther_TurboBoostPressureUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmOther_TurboBoostPressureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_GreenZoneEVDriveAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_GreenZoneEVDriveAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_GreenZoneEVDriveAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_CoastingGuideEnableAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_CoastingGuideEnableAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_CoastingGuideEnableAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_CoastingGuideSoundAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_CoastingGuideSoundAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_CoastingGuideSoundAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_StartCoastingAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_StartCoastingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_StartCoastingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_ChargingConnectorLockingModeAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_ChargingConnectorLockingModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_ChargingConnectorLockingModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_ChargingConnectorConditionAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_ChargingConnectorConditionAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_ChargingConnectorConditionAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_AuxiliaryBatterySaverPlusAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_AuxiliaryBatterySaverPlusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_AuxiliaryBatterySaverPlusAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLanguageAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmLanguageAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmLanguageAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder& getUsmService_ReminderAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder& getUsmService_ReminderAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmService_ReminderAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_VolumeControlFunctionForVESSAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32& getUsmEcoVehicle_VolumeControlFunctionForVESSAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setUsmEcoVehicle_VolumeControlFunctionForVESSAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo& getLastTabInfoAttribute();
    COMMONAPI_EXPORT virtual const ::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo& getLastTabInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setLastTabInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo _value);

    COMMONAPI_EXPORT virtual void Command(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _id, ::v1::proj::dcluster::McuManager::McuManagerTypes::CmdData _data, CommandReply_t _reply);

    COMMONAPI_EXPORT virtual void fireNotifySteerWheelKeyEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumStreerWheelKey &_sw_key);
    COMMONAPI_EXPORT virtual void fireNotifyIGNStateEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState &_ign_state);
    COMMONAPI_EXPORT virtual void fireNotifyContentsGearStateEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo &_gear_info);
    COMMONAPI_EXPORT virtual void fireNotifyEventContentsEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo &_event_info);
    COMMONAPI_EXPORT virtual void fireNotifyMasterWarnInfoEvent();
    COMMONAPI_EXPORT virtual void fireNotifyMasterWarnCmdEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd &_cmd);
    COMMONAPI_EXPORT virtual void fireNotifySoundEvent(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSoundInfo &_channel_1, const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSoundInfo &_channel_2, const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSoundInfo &_channel_3, const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSoundInfo &_channel_4);

    
protected:
    COMMONAPI_EXPORT virtual bool trySetMainContentsDisplayControlAttribute(bool _value);
    COMMONAPI_EXPORT virtual bool validateMainContentsDisplayControlAttributeRequestedValue(const bool &_value);
    COMMONAPI_EXPORT virtual void onRemoteMainContentsDisplayControlAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDrivingStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState _value);
    COMMONAPI_EXPORT virtual bool validateDrivingStateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState &_value);
    COMMONAPI_EXPORT virtual void onRemoteDrivingStateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveModeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo _value);
    COMMONAPI_EXPORT virtual bool validateVariantAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteVariantAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEOLAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo _value);
    COMMONAPI_EXPORT virtual bool validateEOLAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteEOLAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetSWVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo _value);
    COMMONAPI_EXPORT virtual bool validateSWVariantAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteSWVariantAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetIGN1StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual bool validateIGN1StateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState &_value);
    COMMONAPI_EXPORT virtual void onRemoteIGN1StateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetIGN3StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
    COMMONAPI_EXPORT virtual bool validateIGN3StateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState &_value);
    COMMONAPI_EXPORT virtual void onRemoteIGN3StateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetSpeedoUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit _value);
    COMMONAPI_EXPORT virtual bool validateSpeedoUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit &_value);
    COMMONAPI_EXPORT virtual void onRemoteSpeedoUnitAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo _value);
    COMMONAPI_EXPORT virtual bool validateTripDriveModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripDriveModeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripDTEAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo _value);
    COMMONAPI_EXPORT virtual bool validateTripDTEAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripDTEAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripFuelEconomyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo _value);
    COMMONAPI_EXPORT virtual bool validateTripFuelEconomyAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripFuelEconomyAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripAccumulatedAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo _value);
    COMMONAPI_EXPORT virtual bool validateTripAccumulatedAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripAccumulatedAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripDriveInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo _value);
    COMMONAPI_EXPORT virtual bool validateTripDriveInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripDriveInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripDigitalSpeedMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter _value);
    COMMONAPI_EXPORT virtual bool validateTripDigitalSpeedMeterAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripDigitalSpeedMeterAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripPowerFlowDiagramAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow _value);
    COMMONAPI_EXPORT virtual bool validateTripPowerFlowDiagramAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripPowerFlowDiagramAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripUREALevelAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual bool validateTripUREALevelAttributeRequestedValue(const uint8_t &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripUREALevelAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripTransmissionTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel _value);
    COMMONAPI_EXPORT virtual bool validateTripTransmissionTempAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripTransmissionTempAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTripEngineCoolantTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp _value);
    COMMONAPI_EXPORT virtual bool validateTripEngineCoolantTempAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp &_value);
    COMMONAPI_EXPORT virtual void onRemoteTripEngineCoolantTempAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEnergyFlowAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo _value);
    COMMONAPI_EXPORT virtual bool validateEnergyFlowAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteEnergyFlowAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetMyDrivingModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo _value);
    COMMONAPI_EXPORT virtual bool validateMyDrivingModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteMyDrivingModeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDisplayTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType _value);
    COMMONAPI_EXPORT virtual bool validateTBTDisplayTypeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDisplayTypeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDisplayTollgateAttribute(bool _value);
    COMMONAPI_EXPORT virtual bool validateTBTDisplayTollgateAttributeRequestedValue(const bool &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDisplayTollgateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTPreliminaryInfoAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual bool validateTBTPreliminaryInfoAttributeRequestedValue(const uint8_t &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTPreliminaryInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDestInfoPageStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState _value);
    COMMONAPI_EXPORT virtual bool validateTBTDestInfoPageStateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDestInfoPageStateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTPointTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType _value);
    COMMONAPI_EXPORT virtual bool validateTBTPointTypeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTPointTypeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDirectionAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual bool validateTBTDirectionAttributeRequestedValue(const uint8_t &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDirectionAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTRoadDisplayAttribute(uint16_t _value);
    COMMONAPI_EXPORT virtual bool validateTBTRoadDisplayAttributeRequestedValue(const uint16_t &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTRoadDisplayAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTSideRoadDisplayAttribute(uint8_t _value);
    COMMONAPI_EXPORT virtual bool validateTBTSideRoadDisplayAttributeRequestedValue(const uint8_t &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTSideRoadDisplayAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDistanceToDestinationAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo _value);
    COMMONAPI_EXPORT virtual bool validateTBTDistanceToDestinationAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDistanceToDestinationAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDistanceUntilTurnAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo _value);
    COMMONAPI_EXPORT virtual bool validateTBTDistanceUntilTurnAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDistanceUntilTurnAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTExpectedDestTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime _value);
    COMMONAPI_EXPORT virtual bool validateTBTExpectedDestTimeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTExpectedDestTimeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTExpectedRemainTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime _value);
    COMMONAPI_EXPORT virtual bool validateTBTExpectedRemainTimeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTExpectedRemainTimeAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTGuideTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTGuideTPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTGuideTPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTDestTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTDestTPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTDestTPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTViaPoint1TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTViaPoint1TPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint1TPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTViaPoint2TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTViaPoint2TPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint2TPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTViaPoint3TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTViaPoint3TPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint3TPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetTBTViaPoint4TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateTBTViaPoint4TPInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint4TPInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistCruiseControlTTCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistCruiseControlTTCAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistCruiseControlTTCAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistCruiseControlRealAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistCruiseControlRealAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistCruiseControlRealAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistLaneAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistLaneAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistLaneAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistDAWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistDAWAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistDAWAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistISLWAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistISLWAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistAWDAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistAWDAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistAWDAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDriveAssistTPMSAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo _value);
    COMMONAPI_EXPORT virtual bool validateDriveAssistTPMSAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteDriveAssistTPMSAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAdasInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo _value);
    COMMONAPI_EXPORT virtual bool validateAdasInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteAdasInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsGearAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsGearAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsGearAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsCCAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsCCAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsSCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsSCCAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsSCCAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsCoastingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting _value);
    COMMONAPI_EXPORT virtual bool validateContentsCoastingAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsCoastingAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsDISAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsDISAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsDISAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsDTEInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE _value);
    COMMONAPI_EXPORT virtual bool validateContentsDTEInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsDTEInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsISLWAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsISLWAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsOATAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT _value);
    COMMONAPI_EXPORT virtual bool validateContentsOATAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsOATAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsODOMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO _value);
    COMMONAPI_EXPORT virtual bool validateContentsODOMeterAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsODOMeterAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEcoPowerDisplayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState _value);
    COMMONAPI_EXPORT virtual bool validateEcoPowerDisplayInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState &_value);
    COMMONAPI_EXPORT virtual void onRemoteEcoPowerDisplayInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsRSBRAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsRSBRAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsRSBRAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetContentsSpeedLimitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo _value);
    COMMONAPI_EXPORT virtual bool validateContentsSpeedLimitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteContentsSpeedLimitAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetMasterWarnCmdAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd _value);
    COMMONAPI_EXPORT virtual bool validateMasterWarnCmdAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd &_value);
    COMMONAPI_EXPORT virtual void onRemoteMasterWarnCmdAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpAMFMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpAMFMInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpAMFMInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpXMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpXMInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpXMInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpDABInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpDABInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpDABInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpDMBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpDMBInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpDMBInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpJukeBoxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpJukeBoxInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpJukeBoxInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpIpodInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpIpodInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpIpodInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpUSBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpUSBInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpUSBInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpBlueToothInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpBlueToothInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpBlueToothInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpAppleCarPlayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpAppleCarPlayInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpAppleCarPlayInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpAndroidAutoInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpAndroidAutoInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpAndroidAutoInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpIboxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpIboxInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpIboxInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpCDInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpCDInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpCDInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetAvTpBaiduMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
    COMMONAPI_EXPORT virtual bool validateAvTpBaiduMInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData &_value);
    COMMONAPI_EXPORT virtual void onRemoteAvTpBaiduMInfoAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEventContentsFullAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual bool validateEventContentsFullAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteEventContentsFullAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEventContentsMiniAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
    COMMONAPI_EXPORT virtual bool validateEventContentsMiniAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo &_value);
    COMMONAPI_EXPORT virtual void onRemoteEventContentsMiniAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetEventAccessoryAttribute(bool _value);
    COMMONAPI_EXPORT virtual bool validateEventAccessoryAttributeRequestedValue(const bool &_value);
    COMMONAPI_EXPORT virtual void onRemoteEventAccessoryAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetPowerTailGateWarnStateAttribute(bool _value);
    COMMONAPI_EXPORT virtual bool validatePowerTailGateWarnStateAttributeRequestedValue(const bool &_value);
    COMMONAPI_EXPORT virtual void onRemotePowerTailGateWarnStateAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetDisplayLanguageAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE _value);
    COMMONAPI_EXPORT virtual bool validateDisplayLanguageAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE &_value);
    COMMONAPI_EXPORT virtual void onRemoteDisplayLanguageAttributeChanged();
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_SccReactionAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_SccReactionAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_LaneFollowingAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_LaneFollowingAssistAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_HighwayDrivingAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_HighwayDrivingAssistAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DrivingAssist_SpeedLimitWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DrivingAssist_SpeedLimitWarningAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_DriverAttentionWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_DriverAttentionWarningAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_WarningTimingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_WarningTimingAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_WarningVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_WarningVolumeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_LaneSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_LaneSafetyAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_LaneSafety_ModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_LaneSafety_ModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_ForwardSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_ForwardSafetyAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_BlindSpotSafety_SpotViewAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_BlindSpotSafety_SpotViewAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_BlindSpotSafety_SafetyExitAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_BlindSpotSafety_SafetyExitAssistAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_BlindSpotSafety_WarningOnlyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_BlindSpotSafety_WarningOnlyAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_AutoLockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_AutoLockAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_AutoUnlock_KeyOrPowerAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_AutoUnlock_KeyOrPowerAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_AutoUnlockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_AutoUnlockAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_HornFeedbackAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_HornFeedbackAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_PowerTailgateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_PowerTailgateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_PowerTailgateSpeedAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_PowerTailgateSpeedAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmDoor_SmartTailgateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmDoor_SmartTailgateAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmLights_OneTouchTurnSignalAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmLights_OneTouchTurnSignalAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmLights_AmbientLightAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmLights_AmbientLightAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmLights_HeadlightDelayAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmLights_HeadlightDelayAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmLights_HighBeamAssistAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmLights_HighBeamAssistAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmSound_ClusterVoiceGuidanceVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmSound_ClusterVoiceGuidanceVolumeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmSound_ParkAssistVolumeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmSound_ParkAssistVolumeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmSound_WelcomeSoundAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmSound_WelcomeSoundAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_SeatEasyAccessAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_SeatEasyAccessAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_WelcomeMirrorLight_TitleAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_WelcomeMirrorLight_TitleAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_WelcomeMirrorLight_OnDoorUnlockAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_WelcomeMirrorLight_OnDoorUnlockAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_WelcomeMirrorLight_OnDriverApproachAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_WelcomeMirrorLight_OnDriverApproachAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_MirrorAutoFoldingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_MirrorAutoFoldingAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_WirelessChargingSystemAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_WirelessChargingSystemAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_TrafficInformationAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_TrafficInformationAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_WipreLightsDisplayAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_WipreLightsDisplayAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_AutoRearWiperInRAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_AutoRearWiperInRAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_GearPositionPopupAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_GearPositionPopupAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmConvenience_IcyRoadWarningAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmConvenience_IcyRoadWarningAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmServiceInterval_ModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmServiceInterval_ModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmServiceInterval_EnableServiceIntervalAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmServiceInterval_EnableServiceIntervalAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmServiceInterval_ResetAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmServiceInterval_ResetAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_FuelEconomyResetAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_FuelEconomyResetAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_FuelEconomyUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_FuelEconomyUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_TemperatureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_TemperatureUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_TirePressureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_TirePressureUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_SpeedUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_SpeedUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_TorqueUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_TorqueUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmOther_TurboBoostPressureUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmOther_TurboBoostPressureUnitAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_GreenZoneEVDriveAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_GreenZoneEVDriveAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_CoastingGuideEnableAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_CoastingGuideEnableAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_CoastingGuideSoundAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_CoastingGuideSoundAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_StartCoastingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_StartCoastingAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_ChargingConnectorLockingModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_ChargingConnectorLockingModeAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_ChargingConnectorConditionAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_ChargingConnectorConditionAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_AuxiliaryBatterySaverPlusAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_AuxiliaryBatterySaverPlusAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmLanguageAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmLanguageAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmService_ReminderAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder _value);
    COMMONAPI_EXPORT virtual bool validateUsmService_ReminderAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder &_value);
    COMMONAPI_EXPORT virtual bool trySetUsmEcoVehicle_VolumeControlFunctionForVESSAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 _value);
    COMMONAPI_EXPORT virtual bool validateUsmEcoVehicle_VolumeControlFunctionForVESSAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 &_value);
    COMMONAPI_EXPORT virtual bool trySetLastTabInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo _value);
    COMMONAPI_EXPORT virtual bool validateLastTabInfoAttributeRequestedValue(const ::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo &_value);
    class COMMONAPI_EXPORT_CLASS_EXPLICIT RemoteEventHandler: public virtual McuManagerStubRemoteEvent {
    public:
        COMMONAPI_EXPORT RemoteEventHandler(McuManagerStubDefault *_defaultStub);

        COMMONAPI_EXPORT virtual bool onRemoteSetMainContentsDisplayControlAttribute(bool _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetMainContentsDisplayControlAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
        COMMONAPI_EXPORT virtual void onRemoteMainContentsDisplayControlAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDrivingStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDrivingStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState _value);
        COMMONAPI_EXPORT virtual void onRemoteDrivingStateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveModeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteVariantAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEOLAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEOLAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteEOLAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetSWVariantAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetSWVariantAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteSWVariantAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetIGN1StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetIGN1StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
        COMMONAPI_EXPORT virtual void onRemoteIGN1StateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetIGN3StateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetIGN3StateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState _value);
        COMMONAPI_EXPORT virtual void onRemoteIGN3StateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetSpeedoUnitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetSpeedoUnitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit _value);
        COMMONAPI_EXPORT virtual void onRemoteSpeedoUnitAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripDriveModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripDriveModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTripDriveModeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripDTEAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripDTEAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTripDTEAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripFuelEconomyAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripFuelEconomyAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTripFuelEconomyAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripAccumulatedAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripAccumulatedAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTripAccumulatedAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripDriveInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripDriveInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTripDriveInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripDigitalSpeedMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripDigitalSpeedMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter _value);
        COMMONAPI_EXPORT virtual void onRemoteTripDigitalSpeedMeterAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripPowerFlowDiagramAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripPowerFlowDiagramAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow _value);
        COMMONAPI_EXPORT virtual void onRemoteTripPowerFlowDiagramAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripUREALevelAttribute(uint8_t _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripUREALevelAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
        COMMONAPI_EXPORT virtual void onRemoteTripUREALevelAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripTransmissionTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripTransmissionTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel _value);
        COMMONAPI_EXPORT virtual void onRemoteTripTransmissionTempAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTripEngineCoolantTempAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTripEngineCoolantTempAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp _value);
        COMMONAPI_EXPORT virtual void onRemoteTripEngineCoolantTempAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEnergyFlowAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEnergyFlowAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteEnergyFlowAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetMyDrivingModeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetMyDrivingModeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteMyDrivingModeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDisplayTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDisplayTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDisplayTypeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDisplayTollgateAttribute(bool _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDisplayTollgateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDisplayTollgateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTPreliminaryInfoAttribute(uint8_t _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTPreliminaryInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTPreliminaryInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDestInfoPageStateAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDestInfoPageStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDestInfoPageStateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTPointTypeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTPointTypeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTPointTypeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDirectionAttribute(uint8_t _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDirectionAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDirectionAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTRoadDisplayAttribute(uint16_t _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTRoadDisplayAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTSideRoadDisplayAttribute(uint8_t _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTSideRoadDisplayAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTSideRoadDisplayAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDistanceToDestinationAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDistanceToDestinationAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDistanceToDestinationAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDistanceUntilTurnAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDistanceUntilTurnAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDistanceUntilTurnAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTExpectedDestTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTExpectedDestTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTExpectedDestTimeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTExpectedRemainTimeAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTExpectedRemainTimeAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTExpectedRemainTimeAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTGuideTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTGuideTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTGuideTPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDestTPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTDestTPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTDestTPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint1TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint1TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint1TPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint2TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint2TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint2TPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint3TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint3TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint3TPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint4TPInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetTBTViaPoint4TPInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteTBTViaPoint4TPInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistCruiseControlTTCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistCruiseControlTTCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistCruiseControlTTCAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistCruiseControlRealAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistCruiseControlRealAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistCruiseControlRealAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistLaneAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistLaneAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistLaneAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistDAWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistDAWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistDAWAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistISLWAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistAWDAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistAWDAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistAWDAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistTPMSAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDriveAssistTPMSAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteDriveAssistTPMSAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAdasInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAdasInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteAdasInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsGearAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsGearAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsGearAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsCCAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsSCCAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsSCCAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsSCCAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsCoastingAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsCoastingAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsCoastingAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsDISAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsDISAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsDISAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsDTEInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsDTEInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsDTEInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsISLWAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsISLWAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsISLWAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsOATAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsOATAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsOATAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsODOMeterAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsODOMeterAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsODOMeterAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEcoPowerDisplayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEcoPowerDisplayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState _value);
        COMMONAPI_EXPORT virtual void onRemoteEcoPowerDisplayInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsRSBRAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsRSBRAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsRSBRAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetContentsSpeedLimitAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetContentsSpeedLimitAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteContentsSpeedLimitAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetMasterWarnCmdAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetMasterWarnCmdAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd _value);
        COMMONAPI_EXPORT virtual void onRemoteMasterWarnCmdAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAMFMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAMFMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpAMFMInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpXMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpXMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpXMInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpDABInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpDABInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpDABInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpDMBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpDMBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpDMBInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpJukeBoxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpJukeBoxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpJukeBoxInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpIpodInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpIpodInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpIpodInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpUSBInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpUSBInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpUSBInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpBlueToothInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpBlueToothInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpBlueToothInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAppleCarPlayInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAppleCarPlayInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpAppleCarPlayInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAndroidAutoInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpAndroidAutoInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpAndroidAutoInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpIboxInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpIboxInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpIboxInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpCDInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpCDInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpCDInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpBaiduMInfoAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetAvTpBaiduMInfoAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData _value);
        COMMONAPI_EXPORT virtual void onRemoteAvTpBaiduMInfoAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEventContentsFullAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEventContentsFullAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteEventContentsFullAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEventContentsMiniAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEventContentsMiniAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo _value);
        COMMONAPI_EXPORT virtual void onRemoteEventContentsMiniAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetEventAccessoryAttribute(bool _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetEventAccessoryAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
        COMMONAPI_EXPORT virtual void onRemoteEventAccessoryAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetPowerTailGateWarnStateAttribute(bool _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetPowerTailGateWarnStateAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, bool _value);
        COMMONAPI_EXPORT virtual void onRemotePowerTailGateWarnStateAttributeChanged();

        COMMONAPI_EXPORT virtual bool onRemoteSetDisplayLanguageAttribute(::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetDisplayLanguageAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE _value);
        COMMONAPI_EXPORT virtual void onRemoteDisplayLanguageAttributeChanged();

































































    private:
        McuManagerStubDefault *defaultStub_;
    };
protected:
    McuManagerStubDefault::RemoteEventHandler remoteEventHandler_;

private:

    bool mainContentsDisplayControlAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumDrivingState drivingStateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveModeInfo driveModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StVariantInfo variantAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StEOLInfo eOLAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StSWVariantInfo sWVariantAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState iGN1StateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumIGNState iGN3StateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumSpeedoUnit speedoUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveModeInfo tripDriveModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDTEInfo tripDTEAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripFuelEconomyInfo tripFuelEconomyAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripAccumulatedInfo tripAccumulatedAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripDriveInfo tripDriveInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTripSpeedMeter tripDigitalSpeedMeterAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumPowerFlow tripPowerFlowDiagramAttributeValue_ {};
    uint8_t tripUREALevelAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTransmissionTempLevel tripTransmissionTempAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StEngineCoolantTemp tripEngineCoolantTempAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StEnergyFlowInfo energyFlowAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StMyDrvModeInfo myDrivingModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTDisplayType tBTDisplayTypeAttributeValue_ {};
    bool tBTDisplayTollgateAttributeValue_ {};
    uint8_t tBTPreliminaryInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPageState tBTDestInfoPageStateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumTBTPointType tBTPointTypeAttributeValue_ {};
    uint8_t tBTDirectionAttributeValue_ {};
    uint16_t tBTRoadDisplayAttributeValue_ {};
    uint8_t tBTSideRoadDisplayAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDistDestInfo tBTDistanceToDestinationAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTTurnInfo tBTDistanceUntilTurnAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTDestinationTime tBTExpectedDestTimeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StTBTRemainTime tBTExpectedRemainTimeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTGuideTPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTDestTPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTViaPoint1TPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTViaPoint2TPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTViaPoint3TPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData tBTViaPoint4TPInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoTTC driveAssistCruiseControlTTCAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistCCInfoReal driveAssistCruiseControlRealAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistLaneInfo driveAssistLaneAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistDAWInfo driveAssistDAWAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistISLWInfo driveAssistISLWAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistAWDInfo driveAssistAWDAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StDriveAssistTPMSInfo driveAssistTPMSAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StAdasInfo adasInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsGearInfo contentsGearAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCCInfo contentsCCAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSCCInfo contentsSCCAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsCoasting contentsCoastingAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDISInfo contentsDISAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsDTE contentsDTEInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsISLWInfo contentsISLWAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsOAT contentsOATAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsODO contentsODOMeterAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumEcoPwrDispState ecoPowerDisplayInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsRSBRInfo contentsRSBRAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StContentsSpdLimitInfo contentsSpeedLimitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::EnumMasterWarnCmd masterWarnCmdAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpAMFMInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpXMInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpDABInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpDMBInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpJukeBoxInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpIpodInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpUSBInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpBlueToothInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpAppleCarPlayInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpAndroidAutoInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpIboxInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpCDInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::TPData avTpBaiduMInfoAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo eventContentsFullAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::StEventContentsInfo eventContentsMiniAttributeValue_ {};
    bool eventAccessoryAttributeValue_ {};
    bool powerTailGateWarnStateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USM_LANGUAGE_VALUE displayLanguageAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_SccReactionAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_LeadingVehicleDepartureAlertAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_LaneFollowingAssistAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_HighwayDrivingAssistAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_HighwayAutoSpeedZoneSlowDownAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_HighwayAutoCurveSlowDownAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DrivingAssist_SpeedLimitWarningAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_DriverAttentionWarningAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_WarningTimingAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_WarningVolumeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_LaneSafetyAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_LaneSafety_ModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_ForwardSafetyAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_BlindSpotSafety_SpotViewAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_BlindSpotSafety_SafetyExitAssistAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_BlindSpotSafety_WarningOnlyAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDriverAssist_BlindSpotSafety_RearCrossTrafficSafetyAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_AutoLockAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_AutoUnlock_KeyOrPowerAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_AutoUnlockAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_HornFeedbackAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_PowerTailgateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_PowerTailgateSpeedAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmDoor_SmartTailgateAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmLights_OneTouchTurnSignalAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmLights_AmbientLightAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmLights_HeadlightDelayAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmLights_HighBeamAssistAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmSound_ClusterVoiceGuidanceVolumeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmSound_ParkAssistVolumeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmSound_WelcomeSoundAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_SeatEasyAccessAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_WelcomeMirrorLight_TitleAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_WelcomeMirrorLight_OnDoorUnlockAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_WelcomeMirrorLight_OnDriverApproachAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_MirrorAutoFoldingAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_WirelessChargingSystemAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_TrafficInformationAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_WipreLightsDisplayAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_AutoRearWiperInRAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_GearPositionPopupAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmConvenience_IcyRoadWarningAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmServiceInterval_ModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmServiceInterval_EnableServiceIntervalAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmServiceInterval_ResetAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_FuelEconomyResetAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_FuelEconomyUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_TemperatureUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_TirePressureUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_SpeedUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_TorqueUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmOther_TurboBoostPressureUnitAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_GreenZoneEVDriveAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_CoastingGuideEnableAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_CoastingGuideSoundAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_StartCoastingAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_ChargingConnectorLockingModeAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_ChargingConnectorConditionAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_AuxiliaryBatterySaverPlusAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmLanguageAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMServiceReminder usmService_ReminderAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::USMItem32 usmEcoVehicle_VolumeControlFunctionForVESSAttributeValue_ {};
    ::v1::proj::dcluster::McuManager::McuManagerTypes::GroupTabInfo lastTabInfoAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace McuManager
} // namespace dcluster
} // namespace proj
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_PROJ_DCLUSTER_MCUMANAGER_Mcu_Manager_STUB_DEFAULT
