/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.12.v201907221221.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/proj/testcode/TestCode.hpp>
#include <v1/proj/testcode/TestCodeDBusStubAdapter.hpp>

namespace v1 {
namespace proj {
    namespace testcode {

        std::shared_ptr<CommonAPI::DBus::DBusStubAdapter> createTestCodeDBusStubAdapter(
            const CommonAPI::DBus::DBusAddress& _address,
            const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection>& _connection, const std::shared_ptr<CommonAPI::StubBase>& _stub)
        {
            return std::make_shared<TestCodeDBusStubAdapter<::v1::proj::testcode::TestCodeStub>>(_address, _connection, std::dynamic_pointer_cast<::v1::proj::testcode::TestCodeStub>(_stub));
        }

        void initializeTestCodeDBusStubAdapter()
        {
            CommonAPI::DBus::Factory::get()->registerStubAdapterCreateMethod(
                TestCode::getInterface(), &createTestCodeDBusStubAdapter);
        }

        INITIALIZER(registerTestCodeDBusStubAdapter)
        {
            CommonAPI::DBus::Factory::get()->registerInterface(initializeTestCodeDBusStubAdapter);
        }

    } // namespace testcode
} // namespace proj
} // namespace v1
